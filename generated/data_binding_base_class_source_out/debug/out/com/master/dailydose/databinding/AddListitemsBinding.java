// Generated by view binder compiler. Do not edit!
package com.master.dailydose.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.master.dailydose.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddListitemsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView displayTagDay;

  @NonNull
  public final TextView displayTagHome;

  @NonNull
  public final TextView displayTagMonth;

  @NonNull
  public final TextView displayTagOffice;

  @NonNull
  public final TextView displayTagUrgent;

  @NonNull
  public final TextView displayTagWeek;

  @NonNull
  public final TextView displayTagWork;

  @NonNull
  public final TextView displayTagYear;

  @NonNull
  public final TextView displayTaskDate;

  @NonNull
  public final TextView displayTaskName;

  @NonNull
  public final TextView displayTaskTime;

  private AddListitemsBinding(@NonNull LinearLayout rootView, @NonNull TextView displayTagDay,
      @NonNull TextView displayTagHome, @NonNull TextView displayTagMonth,
      @NonNull TextView displayTagOffice, @NonNull TextView displayTagUrgent,
      @NonNull TextView displayTagWeek, @NonNull TextView displayTagWork,
      @NonNull TextView displayTagYear, @NonNull TextView displayTaskDate,
      @NonNull TextView displayTaskName, @NonNull TextView displayTaskTime) {
    this.rootView = rootView;
    this.displayTagDay = displayTagDay;
    this.displayTagHome = displayTagHome;
    this.displayTagMonth = displayTagMonth;
    this.displayTagOffice = displayTagOffice;
    this.displayTagUrgent = displayTagUrgent;
    this.displayTagWeek = displayTagWeek;
    this.displayTagWork = displayTagWork;
    this.displayTagYear = displayTagYear;
    this.displayTaskDate = displayTaskDate;
    this.displayTaskName = displayTaskName;
    this.displayTaskTime = displayTaskTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddListitemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddListitemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_listitems, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddListitemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.display_tag_day;
      TextView displayTagDay = ViewBindings.findChildViewById(rootView, id);
      if (displayTagDay == null) {
        break missingId;
      }

      id = R.id.display_tag_home;
      TextView displayTagHome = ViewBindings.findChildViewById(rootView, id);
      if (displayTagHome == null) {
        break missingId;
      }

      id = R.id.display_tag_month;
      TextView displayTagMonth = ViewBindings.findChildViewById(rootView, id);
      if (displayTagMonth == null) {
        break missingId;
      }

      id = R.id.display_tag_office;
      TextView displayTagOffice = ViewBindings.findChildViewById(rootView, id);
      if (displayTagOffice == null) {
        break missingId;
      }

      id = R.id.display_tag_urgent;
      TextView displayTagUrgent = ViewBindings.findChildViewById(rootView, id);
      if (displayTagUrgent == null) {
        break missingId;
      }

      id = R.id.display_tag_week;
      TextView displayTagWeek = ViewBindings.findChildViewById(rootView, id);
      if (displayTagWeek == null) {
        break missingId;
      }

      id = R.id.display_tag_work;
      TextView displayTagWork = ViewBindings.findChildViewById(rootView, id);
      if (displayTagWork == null) {
        break missingId;
      }

      id = R.id.display_tag_year;
      TextView displayTagYear = ViewBindings.findChildViewById(rootView, id);
      if (displayTagYear == null) {
        break missingId;
      }

      id = R.id.display_task_date;
      TextView displayTaskDate = ViewBindings.findChildViewById(rootView, id);
      if (displayTaskDate == null) {
        break missingId;
      }

      id = R.id.display_task_name;
      TextView displayTaskName = ViewBindings.findChildViewById(rootView, id);
      if (displayTaskName == null) {
        break missingId;
      }

      id = R.id.display_task_time;
      TextView displayTaskTime = ViewBindings.findChildViewById(rootView, id);
      if (displayTaskTime == null) {
        break missingId;
      }

      return new AddListitemsBinding((LinearLayout) rootView, displayTagDay, displayTagHome,
          displayTagMonth, displayTagOffice, displayTagUrgent, displayTagWeek, displayTagWork,
          displayTagYear, displayTaskDate, displayTaskName, displayTaskTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
